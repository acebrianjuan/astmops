# SPDX-FileCopyrightText: 2020 Álvaro Cebrián Juan <acebrianjuan@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later

name: CI

on: [push, pull_request]

jobs:

  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends ninja-build cmake qtbase5-dev qtpositioning5-dev
    - name: configure
      run: cd build && cmake -GNinja ..
    - name: build
      run: cd build && ninja
    - name: check
      run: cd build && ctest --output-on-failure
     
      
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: brew install ninja cmake qt
    - name: configure
      run: cd build && cmake -GNinja -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5 .. 
    - name: build
      run: cd build && ninja
    - name: check
      run: cd build && ctest --output-on-failure


  clang-format:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends clang-format
    - name: run clang-format
      run: find . -iname \*.h -o -iname \*.c -o -iname \*.cpp | xargs clang-format -style=file -i
    - name: check
      run: git diff > clang_format.patch && echo -e "if \n [ -s clang_format.patch ] \nthen \n echo "clang-format not applied:"; echo ""; more clang_format.patch; exit 1 \nfi \n" > detect && chmod +x ./detect && ./detect


  clang-tidy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends clang clang-tidy clang-tools ninja-build cmake qtbase5-dev qtpositioning5-dev
    - name: configure
      run: cd build && cmake -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    - name: build
      run: cd build && ninja
    - name: run clang-tidy
      run: cd build && run-clang-tidy -extra-arg=-Wno-unknown-warning-option -fix
    - name: check
      run: git diff > clang_tidy.patch && echo -e "if \n [ -s clang_tidy.patch ] \nthen \n echo "clang_tidy not applied:"; echo ""; more clang_tidy.patch; exit 1 \nfi \n" > detect && chmod +x ./detect && ./detect


  clazy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends jq clazy ninja-build qtbase5-dev qtpositioning5-dev
    - name: Configure
      run: cmake -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
      working-directory: build
    - name: Build
      run: ninja -j $(nproc) -k 0
      working-directory: build
    - name: run clazy
      run: jq ".[] | .file" ./compile_commands.json | xargs clazy-standalone -checks=level1 -extra-arg=-Wno-unknown-warning-option -p ./
      working-directory: build


  cmakelint:
      runs-on: ubuntu-20.04
      steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo python -m pip install --upgrade pip
          sudo pip install cmakelint
      - name: check CMake scripts
        run: find . -iname "CMakeLists.txt" -o -iname "*.cmake" | xargs cmakelint --filter=-linelength,-readability/wonkycase


  REUSE-compliance:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Check REUSE compliance
      uses: docker://fsfe/reuse
      with:
        args: lint

